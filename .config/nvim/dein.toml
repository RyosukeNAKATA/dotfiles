[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'prabirshrestha/vim-lsp'

[[plugins]]
repo = 'mattn/vim-lsp-settings'
hook_add = 'source ~/dotfiles/.config/nvim/plugins/vim-lsp-settings.vim'

[[plugins]]
repo = 'rust-lang/rust.vim'
hook_add = 'source ~/dotfiles/.config/nvim/plugins/rust.vim'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = 'source ~/dotfiles/.config/nvim/plugins/vim-quickrun.vim'

[[plugins]]
repo = 'racer-rust/vim-racer'

[[plugins]]
repo = 'preservim/nerdtree'

[[plugins]]
repo = 'ryanoasis/vim-devicons'

[[plugins]]
repo = 'itchyny/lightline.vim'

[[plugins]]
repo = 'Yggdroot/indentLine'

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'

[[plugins]]
repo = 'tomtom/tcomment_vim'

[[plugins]]
repo = 'junegunn/fzf'
build_on = './install -all'

[[plugins]]
repo = 'junegunn/fzf.vim'

[[plugins]]
repo = 'vim-scripts/vim-auto-save'

[[plugins]]
repo = 'cocopon/iceberg.vim'

[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'release'
build = '''
  git checkout release
'''
hook_add = '''
  inoremap <silent><expr> <TAB>
        \ pumvisible() ? "\<C-n>" :
        \ <SID>check_back_space() ? "\<TAB>" :
        \ coc#refresh()
  inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"
  inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
  function! s:check_back_space() abort
    let col = col('.') - 1
    return !col || getline('.')[col - 1]  =~# '\s'
  endfunction
  nmap <silent> gd <Plug>(coc-definition)
  nmap <silent> gy <Plug>(coc-type-definition)
  nmap <silent> gi <Plug>(coc-implementation)
  nmap <silent> gr <Plug>(coc-references)
'''
