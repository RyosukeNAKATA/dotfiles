# ==============================================================================
# bash general settings
# ==============================================================================
setopt no_beep
# ==============================================================================
# zsh general add-on
# ==============================================================================
{{ if (eq .chezmoi.os "darwin") }}
# zsh-completions
if type brew &>/dev/null; then
    FPATH=$(brew --prefix)/share/zsh-completions:$FPATH
    source $(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh
    autoload -Uz compinit
    zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
    compinit
fi
{{ end }}
# fzf completions ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
fzf-file-widget () {
    local selected_file=$(fd --hidden --exclude .git --type f . "$1" | fzf --ansi --preview 'bat --style=numbers --color=always {}' --preview-window=':wrap' --reverse --query "$2" --select-1 --exit-0)
    if [ -n "$selected_file" ]; then
        READLINE_LINE="${READLINE_LINE:0:${#READLINE_LINE}-(${#2})}$selected_file"
        READLINE_POINT=$(( ${#READLINE_LINE} ))
    fi
}

# Bind fzf-file-widget to ctrl+t
bind -x '"\C-t": "fzf-file-widget '' \"\C-p\""'
# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
{{ if (eq .chezmoi.os "darwin") }}
# autopair.zsh
source /opt/homebrew/share/zsh-autopair/autopair.zsh
# fast-syntax-highlighting
source /opt/homebrew/opt/zsh-fast-syntax-highlighting/share/zsh-fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh
# zsh-abbr
source /opt/homebrew/share/zsh-abbr/zsh-abbr.zsh
typeset -gi ABBR_QUIET=1
# homebrew
eval "$(/opt/homebrew/bin/brew shellenv)"
{{ end }}
# ==============================================================================
# commandline utilities
# ==============================================================================
# starship
eval "$(starship init bash)"
# zoxied
eval "$(zoxide init bash)"
# mocword
# export MOCWORD_DATA=~/.cache/mocword.sqlite
# ==============================================================================
# language settings
# ==============================================================================
# Rust
source $HOME/.cargo/env
# Go
export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin
# Python +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# pyenv
eval "$(pyenv init --path)"
# poetry completion
export PATH="$HOME/.poetry/bin:$PATH"
# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Node JS
VOLTA_HOME=$HOME/.volta
export PATH=$VOLTA_HOME/bin:$PATH
{{ if (eq .chezmoi.username "ryosuke.nakata") }}
# Ruby
export PATH="$HOME/.rbenv/bin:$PATH" 
eval "$(rbenv init - zsh)"
{{ end }}
# ==============================================================================
# aliases
# ==============================================================================
# general use for rewrite in rust
# abbr -S lls='exa -lF --icons'
# abbr -S lla='exa -laF --icons'
# abbr -S l='exa -lbF --git --icons'
# abbr -S ll='exa -lbGF --git --icons'
# abbr -S llm='exa -lbGd --git --sort=modified --icons'
# abbr -S la='exa -lbhHigUmuSa --time-style=long-iso --git --color-scale --icons'
# abbr -S lx='exa -lbhHigUmuSa@ --time-style=long-iso --git --color-scale --icons'
# # specialty views
# abbr -S lt='exa --tree --level=2 --icons' # tree
# abbr -S tree='exa -T --icons'
# # cat
# abbr -S catall='bat -A'
# # find
# abbr -S finde='fd -e'
# abbr -S findh='fd -H'
# abbr -S findi='fd -I'
# # git
# abbr -S ga='git add -A'
# abbr -S gc='git commit -m'
# abbr -S gps='git push'
# abbr -S gpl='git pull'
# abbr -S grm='git rm -r --cached .'
# # gitui
# abbr -S gu='gitui'
# # neovim
# abbr -S nv='nvim'
# # cargo-compete
# abbr -S compete='cargo compete'
