# ==============================================================================
# zsh general settings
# ==============================================================================
setopt no_beep
# ==============================================================================
# zsh general add-on
# ==============================================================================
{{ if (eq .chezmoi.os "darwin") }}
# zsh-completions
if type brew &>/dev/null; then
    FPATH=$(brew --prefix)/share/zsh-completions:$FPATH
    source $(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh
    autoload -Uz compinit
    zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
    compinit
fi
{{ end }}
# fzf completions ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND='rg --files --hidden --glob "!.git"'
export FZF_DEFAULT_OPTS='--height 60% --reverse --border'
function fzf-history-widget() {
    local tac=${commands[tac]:-"tail -r"}
    BUFFER=$( ([ -n "$ZSH_NAME" ] && fc -l 1 || history) | sed 's/ *[0-9]* *//' | eval $tac | awk '!a[$0]++' | fzf +s)
    CURSOR=$#BUFFER
    zle clear-screen
}
zle     -N   fzf-history-widget
bindkey '^r' fzf-history-widget
export FZF_CTRL_T_COMMAND="fd --type f "
export FZF_CTRL_T_OPTS="
    --select-1 --exit-0
    --bind 'ctrl-l:execute(tmux splitw -h -- nvim {})'
    --bind '>:reload($FZF_ALT_C_COMMAND -H -E .git )'
    --bind '<:reload($FZF_ALT_C_COMMAND)'
    --preview 'bat -r :100 --color=always --style=header,grid {}'"
# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
{{ if (eq .chezmoi.os "darwin") }}
# autopair.zsh
source /opt/homebrew/share/zsh-autopair/autopair.zsh
# fast-syntax-highlighting
source /opt/homebrew/opt/zsh-fast-syntax-highlighting/share/zsh-fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh
# zsh-abbr
source /opt/homebrew/share/zsh-abbr/zsh-abbr.zsh
typeset -gi ABBR_QUIET=1
# homebrew
eval "$(/opt/homebrew/bin/brew shellenv)"
{{ end }}
# ==============================================================================
# commandline utilities
# ==============================================================================
# starship
eval "$(starship init zsh)"
# zoxied
eval "$(zoxide init zsh)"
# zsh-abbr
for substitution in ${(f)"$(defaults read ~/Library/Preferences/.GlobalPreferences.plist NSUserDictionaryReplacementItems | plutil -convert json -o - - | jq -r 'to_entries[] | "\(.value.replace)=\(.value.with)"')"}; do
  abbr add [options] "$substitution"
done
# mocword
export MOCWORD_DATA=~/.cache/mocword.sqlite
# ==============================================================================
# language settings
# ==============================================================================
# Rust
source $HOME/.cargo/env
# Go
export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin
# Python +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# pyenv
eval "$(pyenv init --path)"
# poetry completion
export PATH="$HOME/.poetry/bin:$PATH"
# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Node JS
VOLTA_HOME=$HOME/.volta
export PATH=$VOLTA_HOME/bin:$PATH
# ==============================================================================
# aliases
# ==============================================================================
# general use for rewrite in rust
abbr -S lls='exa -lF --icons'
abbr -S lla='exa -laF --icons'
abbr -S l='exa -lbF --git --icons'
abbr -S ll='exa -lbGF --git --icons'
abbr -S llm='exa -lbGd --git --sort=modified --icons'
abbr -S la='exa -lbhHigUmuSa --time-style=long-iso --git --color-scale --icons'
abbr -S lx='exa -lbhHigUmuSa@ --time-style=long-iso --git --color-scale --icons'
# specialty views
abbr -S lt='exa --tree --level=2 --icons' # tree
abbr -S tree='exa -T --icons'
# cat
abbr -S catall='bat -A'
# find
abbr -S finde='fd -e'
abbr -S findh='fd -H'
abbr -S findi='fd -I'
# git
abbr -S ga='git add -A'
abbr -S gc='git commit -m'
abbr -S gps='git push'
abbr -S gpl='git pull'
abbr -S grm='git rm -r --cached .'
# gitui
abbr -S gu='gitui'
# neovim
abbr -S nv='nvim'
# cargo-compete
abbr -S compete='cargo compete'
